name: On-Demand PR Test

on:
  workflow_dispatch:
    inputs:
      pr:
        description: 'PR Number'
        type: string
        required: true
      comment-id:
        description: 'Comment ID (Optional)'
        type: string
        required: false

env:
  AIRBYTE_ANALYTICS_ID: ${{ vars.AIRBYTE_ANALYTICS_ID }}

permissions:
  contents: read
  pull-requests: write
  issues: write
  checks: write
  actions: write
  statuses: write

jobs:
  start-workflow:
    name: Start Workflow
    runs-on: ubuntu-latest
    steps:

    - name: Resolve workflow variables
      id: vars
      uses: aaronsteers/resolve-ci-vars-action@v0

    - name: Append comment with job run link
      id: first-comment-action
      uses: peter-evans/create-or-update-comment@v4
      with:
        comment-id: ${{ github.event.inputs.comment-id }}
        issue-number: ${{ github.event.inputs.pr }}
        body: |

          > PR test job started... [Check job output.][1]

          [1]: ${{ steps.vars.outputs.run-url }}

    outputs:
      source-repo: ${{ steps.vars.outputs.pr-source-repo-name-full }}
      source-branch: ${{ steps.vars.outputs.pr-source-git-branch }}
      commit-sha: ${{ steps.vars.outputs.pr-source-git-sha }}
      pr-number: ${{ steps.vars.outputs.pr-number }}
      pr-title: ${{ steps.vars.outputs.pr-title }}
      job-run-url: ${{ steps.vars.outputs.run-url }}

  # This is copied from the `python_pytest.yml` file.
  # Only the first two steps of the job are different, and they check out the PR's branch.
  pytest-on-demand:
    name: On-Demand PR Pytest (All, Python ${{ matrix.python-version }}, ${{ matrix.os }})
    needs: [start-workflow]
    strategy:
      matrix:
        python-version: [
          '3.10',
          '3.11',
        ]
        os: [
          Ubuntu,
          Windows,
        ]
      fail-fast: false
    runs-on: "${{ matrix.os }}-latest"
    env:
      # Enforce UTF-8 encoding so Windows runners don't fail inside the connector code.
      # TODO: See if we can fully enforce this within PyAirbyte itself.
      PYTHONIOENCODING: utf-8
    steps:

    - name: Authenticate as GitHub App
      uses: actions/create-github-app-token@v2
      id: get-app-token
      with:
        owner: "airbytehq"
        repositories: "PyAirbyte"
        app-id: ${{ secrets.OCTAVIA_BOT_APP_ID }}
        private-key: ${{ secrets.OCTAVIA_BOT_PRIVATE_KEY }}

    - name: Checkout PR
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ needs.start-workflow.outputs.commit-sha }}

    # Post "In Progress" status to the PR.
    # This is required because otherwise slash commands won't automatically
    # update the PR checks status.
    - name: Create "Pending" Check Status
      if: always() && !cancelled()
      uses: LouisBrunner/checks-action@v2.0.0
      with:
        name: "Pytest (All, Python ${{ matrix.python-version }}, ${{ matrix.os }})"
        repo: "airbytehq/PyAirbyte"  # Post to the main repo, not the fork
        sha: ${{ needs.start-workflow.outputs.commit-sha }}
        status: in_progress
        action_url: ${{ needs.start-workflow.outputs.job-run-url }}
        details_url: ${{ needs.start-workflow.outputs.job-run-url }}
        token: ${{ steps.get-app-token.outputs.token }}

    # Same as the `python_pytest.yml` file:

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Poetry
      uses: Gr1N/setup-poetry@v9
      with:
        poetry-version: "2.0.1"
    - name: Install dependencies
      run: poetry install

    - name: Run Pytest
      timeout-minutes: 60
      env:
        GCP_GSM_CREDENTIALS: ${{ secrets.GCP_GSM_CREDENTIALS }}
      # We exclude super-slow and flaky tests in order to expedite PR reviews
      # and to reduce chance of unrelated noise in the review process.
      run: >
        poetry run pytest
        --verbose
        -m "not super_slow and not flaky"

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always() && !cancelled()
      continue-on-error: true
      with:
        check_name: "PyTest Results (On-Demand)"
        large_files: true
        files: |
          build/test-results/**/*.xml

    # Post completion status to the PR.
    # This is required because otherwise slash commands won't automatically
    # update the PR checks status.
    - name: Create Final Check Status
      if: always()
      uses: LouisBrunner/checks-action@v2.0.0
      with:
        name: "Pytest (All, Python ${{ matrix.python-version }}, ${{ matrix.os }})"
        repo: "airbytehq/PyAirbyte"  # Post to the main repo, not the fork
        sha: ${{ needs.start-workflow.outputs.commit-sha }}
        status: completed
        conclusion: ${{ job.status }}
        action_url: ${{ needs.start-workflow.outputs.job-run-url }}
        details_url: ${{ needs.start-workflow.outputs.job-run-url }}
        token: ${{ steps.get-app-token.outputs.token }}

  log-success-comment:
    name: Append 'Success' Comment
    needs: [pytest-on-demand]
    runs-on: ubuntu-latest
    steps:
    - name: Append success comment
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.inputs.pr }}
        comment-id: ${{ github.event.inputs.comment-id }}
        reactions: hooray
        body: |
          > ✅ Tests passed.

  log-failure-comment:
    name: Append 'Failure' Comment
    # This job will only run if the workflow fails
    needs: [pytest-on-demand, start-workflow]
    if: always() && needs.pytest-on-demand.result == 'failure'
    runs-on: ubuntu-latest
    steps:
    - name: Append failure comment
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.inputs.pr }}
        comment-id: ${{ github.event.inputs.comment-id }}
        reactions: confused
        body: |
          > ❌ Tests failed.
